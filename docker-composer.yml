version: '3.8'

services:
  app:
    image: node:18-alpine
    container_name: app
    working_dir: /usr/src/app
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
    command: sh -c "npm install --silent && npm run dev"
    restart: unless-stopped
    depends_on:
      - db
      - redis
    networks:
      - backend

  db:
    image: postgres:13-alpine
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  redis:
    image: redis:6-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - backend

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - frontend
      - backend

volumes:
  pgdata:

networks:
  frontend:
  backend: